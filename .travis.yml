language: c
dist: trusty
sudo: false

os:
  - osx
  - linux

compiler:
  - clang
  - gcc

notifications:
  email:
    on_success: never # default: change
    on_failure: never # default: always

cache:
  bundler: true
  directories:
    - $HOME/cache/
    - $HOME/deps

env:
  global:
    - DEPS=$HOME/deps
    - PATH=$DEPS/bin:$PATH
  matrix:
    include:
      - python: "2.7"
	    env: ENV=python
        rvm: 1.8.7
        addons: { apt: { packages: [python2.7-dev] } }
      - python: "3.6"
	    env: ENV=python3
        rvm: 1.8.7
        addons: { apt: { packages: [python3-dev] } }
      - env: ENV=ruby18
        rvm: 1.8.7
      - env: ENV=ruby20
        rvm: 2.0.0
	  - env: ENV=ruby24
        rvm: 2.4.1

addons:
  apt:
    sources:
     # The Travis apt source whitelist can be found here:
     #   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
     - ubuntu-toolchain-r-test  # for new libstdc++
     - george-edison55-precise-backports # for a more recent version of cmake (3.2.3)
    packages:
      - autoconf
      - clang
      - lcov
      - libperl-dev
      - python-dev
      - python3-dev
      - liblua5.2-dev
      - lua5.2
      - ruby-dev
      - tcl-dev
      - cscope
      - libgtk2.0-dev
      - cmake-data
      - cmake
      # Everything below is a Python build dep (though it depends on Python
      # version). We need them because pyenv builds Python.
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
  homebrew:
    packages:
      - lua
    update: true

before_install:
  - rvm reset
    # Remove /opt/python/3.x.x/bin from $PATH for using system python3.
    # ("pyenv global system" doesn't seem to work.)
  - if [ "$TRAVIS_OS_NAME" = "linux" ] && which python3 | grep '/opt/python/' > /dev/null; then export PATH=$(echo $PATH | sed -e "s#$(echo $(which python3) | sed -e 's#/python3$##'):##"); fi
    # Lua is not installed on Travis OSX
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export LUA_PREFIX=/usr/local; fi
    # Use llvm-cov instead of gcov when compiler is clang.
  - if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$CC" = "clang" ]; then ln -sf $(which llvm-cov) /home/travis/bin/gcov; fi

# Start virtual framebuffer to be able to test the GUI. Does not work on OS X.
before_script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then export DISPLAY=:99.0 && sh -e /etc/init.d/xvfb start && sleep 3; fi

install: |
  mkdir -p ${DEPS}/bin
  C_OPTS="--prefix=$DEPS --with-features=huge --enable-perlinterp --enable-luainterp --enable-tclinterp --enable-fail-if-missing"
  case "$ENV" in
    python)
      C_OPTS+=--enable-pythoninterp
      ;;
    python3)
      C_OPTS+=--enable-python3interp
      ;;
    ruby*)
      C_OPTS+=--enable-rubyinterp
      ;;
  esac
  git clone --depth 1 https://github.com/vim/vim
  cd vim
  export PATH=/usr/bin:$PATH
  ./configure $C_OPTS
  make
  make install
  cd -

script:
  echo "PATH: $PATH"
  echo "Using vim: $(which vim)"
  vim --version
  pip install --user pynvim
  curl https://git.io/starry-vim -L > starry-vim.sh && sh starry-vim.sh
  - if [ -n "$err" ]; then exit 1; fi

